using HarpoS7.Monoliths.Transforms;

namespace HarpoS7.Monoliths.Data;

public static class Transform7Data
{
    public static Memory<byte> Data { get; } = new byte[256]
    {
        0x18, 0xe3, 0xb5, 0xe6, 0xa6, 0xa5, 0x22, 0xf1, 0xc4, 0xe9, 0x42, 0x4b, 0x51, 0x8c, 0x63, 0x85, 0x0d, 0x7b,
        0xbd, 0xe0, 0x5b, 0xc6, 0x80, 0xe4, 0xa4, 0x46, 0x86, 0xb3, 0x91, 0x48, 0xe5, 0x65, 0xf9, 0x54, 0x64, 0x76,
        0x0e, 0x40, 0x94, 0x47, 0x50, 0x5d, 0x72, 0xbe, 0xb0, 0x8b, 0x18, 0xa7, 0x3e, 0xe3, 0x9b, 0x47, 0x19, 0x0f,
        0x17, 0x91, 0x10, 0xf7, 0x30, 0x51, 0x9d, 0x25, 0x8a, 0xc8, 0x54, 0xea, 0x3c, 0x43, 0x43, 0x0f, 0x9e, 0xef,
        0x7a, 0x57, 0xb9, 0x86, 0x4e, 0x70, 0x0a, 0xe6, 0xb4, 0xbc, 0x58, 0x0a, 0x13, 0xf5, 0x4f, 0x70, 0x3f, 0x7b,
        0xb8, 0xe1, 0xeb, 0x7e, 0x40, 0xc2, 0xec, 0xad, 0x57, 0x32, 0x4b, 0x3c, 0xd1, 0x02, 0xdd, 0x77, 0x51, 0x33,
        0x06, 0x08, 0xf8, 0x04, 0x38, 0x30, 0xfb, 0xde, 0xfc, 0x3e, 0x71, 0x62, 0x5e, 0x92, 0x72, 0xb1, 0x79, 0x2f,
        0xba, 0xb2, 0x50, 0x5f, 0xfb, 0x32, 0x4f, 0x0c, 0x8e, 0x9d, 0x16, 0x92, 0x55, 0x80, 0x43, 0x2f, 0xde, 0x8a,
        0xed, 0xba, 0xf6, 0xec, 0x79, 0xfd, 0x56, 0xff, 0x41, 0x9b, 0x43, 0x00, 0x9e, 0x1f, 0x45, 0xbc, 0xfa, 0xf2,
        0xed, 0xd1, 0xf5, 0x3d, 0x44, 0x24, 0xd5, 0xb7, 0xfc, 0x5f, 0xef, 0x79, 0xd3, 0x21, 0xe0, 0xbf, 0x08, 0x6d,
        0x31, 0x1b, 0x70, 0x5f, 0x97, 0x9e, 0x58, 0xae, 0x49, 0x12, 0x4a, 0xae, 0x81, 0x10, 0x6f, 0x5f, 0x04, 0x87,
        0xf0, 0x86, 0x8a, 0xdd, 0xf1, 0x50, 0xd6, 0x46, 0x9e, 0xf1, 0x92, 0x3a, 0x0c, 0x82, 0xc7, 0x4e, 0x8c, 0x4e,
        0x8e, 0x0c, 0x9d, 0xa3, 0x07, 0x17, 0x47, 0x85, 0x32, 0x61, 0x7a, 0x4a, 0xd7, 0x58, 0x6e, 0x84, 0xe2, 0xd8,
        0x2e, 0x7d, 0x3b, 0x67, 0x8c, 0xcd, 0x13, 0xf1, 0xbc, 0x88, 0xf7, 0xe8, 0x7f, 0x6c, 0xfe, 0x4c, 0x69, 0x9d,
        0xe9, 0x35, 0xa7, 0x57
    };

    /// <summary>
    /// Indexes used with <see cref="Transform12.Execute"/>
    /// </summary>
    public static Memory<int> Indexes { get; } = new int[498]
    {
        0x772A, 0xDCFB, 0x637E, 0x2D53, 0x2306, 0xC4BF, 0x67ED, 0x7D01, 0x7330, 0x227B, 0xB27A, 0xC1C1, 0xD247, 0x462B,
        0x5B41, 0x48A5, 0xD96C, 0xBC16, 0x911B, 0xCB3F, 0xBD19, 0x5976, 0x456E, 0x9954, 0xDDD5, 0x4A92, 0x971A, 0x9068,
        0x7666, 0x1698, 0x2784, 0x34D5, 0x70C2, 0xDAE4, 0x85AC, 0x3EEA, 0x844B, 0xA56A, 0x68EE, 0xBCD2, 0x8EB7, 0xC2B0,
        0x694E, 0x922A, 0x5907, 0xE184, 0x5888, 0x570A, 0x5C3D, 0xADBD, 0x97DC, 0x689F, 0x2A1E, 0xEAFA, 0x6EE1, 0xD84C,
        0x2E7D, 0x15E3, 0x5AF, 0xA928, 0x9DA1, 0xA414, 0x4E16, 0x4771, 0xEC58, 0xE2A3, 0x8B88, 0xB3A0, 0xE47E, 0x75F9,
        0xE221, 0xB6D2, 0xA28C, 0x84B9, 0x1856, 0x2482, 0x2C0E, 0x9B7C, 0x2EDE, 0xB80F, 0xBF46, 0x50BC, 0x3AD7, 0xED0D,
        0xBDB, 0xA6FC, 0x82E, 0x609C, 0xCC3B, 0x33D9, 0x25E5, 0x87B5, 0x226, 0xE9C0, 0xDB7B, 0x355B, 0xFE4, 0x649E,
        0x6C88, 0x36FF, 0x3642, 0xD1CF, 0x32A4, 0x782C, 0x1365, 0xC9AA, 0x3E96, 0x655B, 0x3FF5, 0xCBCD, 0xDCA9, 0x11DA,
        0x3D92, 0x4439, 0x8600, 0xA0CD, 0xDA44, 0x5037, 0x91BF, 0x4D91, 0xBE55, 0xC317, 0x2500, 0xA046, 0x9882, 0x8239,
        0x3E1D, 0x6A67, 0x2A77, 0x5BE4, 0x3A65, 0xD51E, 0x740D, 0xA5D0, 0xA8BA, 0x17D4, 0x00, 0xD568, 0x217E, 0x5CF2,
        0xEB58, 0xC11E, 0xB7F, 0xA98F, 0xBA65, 0xBFC3, 0xCF39, 0xCDAA, 0x1968, 0x5FC, 0x54C8, 0x432C, 0xD0, 0x1D31,
        0x7A89, 0x8AA4, 0x6692, 0xE67B, 0x5384, 0x8F41, 0xA2F1, 0x301, 0x6E4C, 0x1C18, 0x7922, 0xB065, 0xE60F, 0x9C4F,
        0x548, 0x83D0, 0x9BE3, 0x1157, 0x3C7A, 0x1421, 0x9C3, 0x4A12, 0xB1F8, 0xAB7D, 0xAD4E, 0x5E22, 0x5A0C, 0x3B41,
        0xE2F4, 0x2CC6, 0xC172, 0x71E1, 0x929B, 0x375F, 0x57A2, 0x35C8, 0x542E, 0xCE04, 0x77A8, 0xAC15, 0xF7D, 0xCCE,
        0x26D, 0xECB, 0xE502, 0x94E7, 0x4127, 0x93F3, 0x40C5, 0x7B24, 0x2872, 0xD7CF, 0x1735, 0xB99A, 0x18B2, 0x6032,
        0x1B3C, 0x711F, 0xC76D, 0xE960, 0x8A37, 0x2028, 0x851E, 0x5213, 0x3318, 0xABC8, 0x21F0, 0x6BA, 0x1BB8, 0x69F7,
        0x1FAF, 0x39A6, 0xB71B, 0xBDF3, 0xB44B, 0xE37D, 0x8091, 0x299A, 0xDD13, 0xE405, 0xC561, 0x9317, 0x2920, 0x8AF1,
        0x38A0, 0x7043, 0x6234, 0x4E85, 0xC070, 0x937, 0x210F, 0x9D3C, 0x819D, 0x30F8, 0x394C, 0xB5A4, 0x9E9B, 0x7DA3,
        0xB777, 0xDE6E, 0x6CDC, 0x44E, 0xC6C8, 0xAEA5, 0x6732, 0x9A01, 0x2DE5, 0x12CC, 0xD454, 0x5D5F, 0x7BB3, 0x98ED,
        0x416F, 0x518A, 0x6B2D, 0x8FFF, 0x4233, 0xA65D, 0xD6FF, 0xD023, 0x384C, 0xC383, 0xCA03, 0xC835, 0xC600, 0x9FBD,
        0xDECD, 0x96B8, 0xDFDC, 0x1D80, 0x6605, 0xEA61, 0x484B, 0x8104, 0x10BA, 0xAE1C, 0x7C52, 0xA1ED, 0x2B1A, 0x5513,
        0x886E, 0x315E, 0x37BE, 0xAA74, 0x7FB5, 0x82AE, 0x561F, 0x5EE8, 0xA83C, 0x301B, 0x9CA3, 0x4967, 0x8D52, 0x4BA5,
        0xD1E, 0x746C, 0x1C6C, 0xC416, 0xA76B, 0x72A0, 0x1ED7, 0x6BAE, 0x9ABE, 0x239D, 0xE829, 0x132, 0xBF20, 0xEC4E,
        0x8D30, 0x647C, 0x58DD, 0x4D3C, 0x4E76, 0x8A95, 0xD7A6, 0x1340, 0x5B31, 0x928B, 0x781F, 0x2BF0, 0x8843, 0x7F95,
        0x4D66, 0x4B68, 0x21C5, 0xB65E, 0xDC86, 0xCAB, 0x576D, 0x3A34, 0x61DC, 0x281A, 0x3ACC, 0x3FEA, 0x87A3, 0x5780,
        0x4E68, 0x4D2E, 0xE1DE, 0x3631, 0xC68C, 0x810, 0xEAD5, 0xA6D7, 0x85A2, 0x842B, 0xC9A, 0xBCA4, 0x135A, 0x8863,
        0x9D95, 0xEDAE, 0x9057, 0x3A54, 0xB03B, 0x7B89, 0xC752, 0xC295, 0x442C, 0x5BD7, 0x5017, 0x1B1C, 0x3A47, 0x4226,
        0x83BC, 0x4318, 0xB369, 0xB74, 0x195C, 0xAD42, 0x2B0F, 0x8192, 0x2BFD, 0xB38F, 0xB689, 0xB578, 0xBCB5, 0xB3,
        0xED91, 0x7802, 0xD940, 0xDFB0, 0x3FD6, 0x4B54, 0xE1EF, 0x78E1, 0x1D0B, 0x7DB, 0xA0C1, 0xE4F6, 0x5792, 0x9B6C,
        0xB510, 0xD407, 0x75EB, 0xC99C, 0x5ED8, 0xC67C, 0xA6B8, 0x94, 0x2E6F, 0xC66E, 0x7451, 0xB374, 0x6B12, 0xA02B,
        0x225E, 0xB6B5, 0x7E6, 0xB25D, 0xBFA4, 0x5957, 0xA1DD, 0x7A79, 0xB26A, 0x688F, 0xBF2A, 0xE3DC, 0x8083, 0xC9F5,
        0xA3F6, 0x849B, 0xC102, 0x50A0, 0x483F, 0x2F5, 0x7F3, 0x1404, 0xDAC6, 0xC6AA, 0x1EB9, 0x2ECF, 0x1935, 0xA643,
        0xB55D, 0x1D16, 0xC65E, 0x7320, 0xD787, 0x297B, 0x5601, 0x7BD, 0x92F4, 0x2CA3, 0xE179, 0x8F36, 0x2173, 0xB1ED,
        0xD7C0, 0x1CFC, 0x10A2, 0xEA46, 0xC7D, 0x2C86, 0x4B93, 0x6680, 0xE472, 0x843F, 0x8A21, 0x77F7, 0x2E65, 0x3154,
        0xEA56, 0x8A2C, 0xB440, 0x40BA, 0xA2E5, 0x3148, 0xE373, 0x8435, 0x7913, 0xA634, 0x6C7E, 0x8598, 0x11CB, 0x1EC8,
        0xEA36, 0x3A24, 0xE3F8, 0x194F, 0x10B2, 0xCB37, 0xC987, 0x6369
    };

    /// <summary>
    /// Counts used with <see cref="Transform12.Execute"/>
    /// </summary>
    public static Memory<int> Counts { get; } = new int[498]
    {
        0x7E, 0x18, 0xFE, 0x92, 0x97, 0xA2, 0xA2, 0xA2, 0xDD, 0x8B, 0xEF, 0xD4, 0x1C0, 0x146, 0x96, 0xC2, 0xD8, 0x8E,
        0xA4, 0x8E, 0xDA, 0x96, 0xBD, 0xAD, 0x99, 0xC2, 0xC2, 0xB3, 0xC4, 0x9D, 0x96, 0x86, 0x5D, 0x97, 0x54, 0xEC,
        0x50, 0x66, 0x60, 0x47, 0x7F, 0x67, 0xA9, 0x61, 0x50, 0x5A, 0x55, 0x63, 0xB5, 0x5F, 0xA6, 0x4F, 0x59, 0x5E,
        0x162, 0xF4, 0x52, 0xB5, 0x4D, 0x67, 0xFA, 0x156, 0x52, 0xCE, 0xB5, 0x51, 0x1A8, 0xA0, 0x78, 0x6D, 0x82, 0x49,
        0x59, 0x65, 0x5C, 0x7E, 0x78, 0x67, 0x13D, 0x18B, 0x5E, 0xCE, 0x6A, 0x84, 0xA2, 0x6F, 0x109, 0x140, 0x16F, 0xFC,
        0x19F, 0x8E, 0x47, 0x76, 0x10B, 0x6D, 0xBE, 0xBD, 0x54, 0x60, 0xBD, 0x78, 0x74, 0xB5, 0x9F, 0x4B, 0x54, 0xAA,
        0xC5, 0x6E, 0x52, 0xF2, 0x8B, 0x135, 0x1A3, 0x110, 0x82, 0x69, 0x6B, 0x85, 0xCB, 0x6C, 0xE5, 0x7B, 0x6B, 0x75,
        0x79, 0xAB, 0x98, 0x59, 0x67, 0x4A, 0x44, 0x64, 0x6E, 0x82, 0x94, 0x197, 0x47, 0x6D, 0xF6, 0x54, 0x5C, 0xE5,
        0x1B1, 0xAD, 0xEA, 0x5A, 0x1B4, 0xBE, 0x4B, 0x100, 0x62, 0x4F, 0x9B, 0x4D, 0xA0, 0x1AE, 0xAA, 0xBE, 0x105,
        0x14D, 0x95, 0x54, 0x157, 0x188, 0x6C, 0x54, 0x67, 0x5B, 0x6C, 0x74, 0x118, 0x1C2, 0x1B1, 0x80, 0x65, 0x4B,
        0x6F, 0xB6, 0x125, 0x139, 0x7F, 0x8D, 0x4F, 0xBF, 0x59, 0x5F, 0xE6, 0x69, 0x9A, 0x135, 0x4F, 0x12D, 0x67, 0x50,
        0x88, 0xB2, 0x10D, 0x1D1, 0x48, 0xF4, 0x62, 0x65, 0xAE, 0x7D, 0x9F, 0xCB, 0x83, 0x6A, 0x7C, 0xC2, 0xC8, 0x60,
        0x5E, 0xE7, 0x7A, 0x171, 0xC1, 0x4D, 0x6E, 0x103, 0x60, 0x70, 0x79, 0x7E, 0x5C, 0x62, 0xC5, 0x5F, 0x73, 0x84,
        0xC2, 0x6D, 0x9F, 0xDC, 0x5B, 0x97, 0xAC, 0x7F, 0x135, 0x192, 0x92, 0x8C, 0x64, 0x59, 0x9C, 0x50, 0x5A, 0xBA,
        0x122, 0x1F2, 0x98, 0x5F, 0x170, 0xFA, 0x8A, 0x196, 0xBB, 0xBD, 0x80, 0x74, 0xCA, 0xC3, 0x9F, 0x67, 0xB7, 0x89,
        0x81, 0x58, 0xE5, 0x5B, 0x88, 0x1AC, 0x54, 0x93, 0x134, 0x152, 0x5E, 0x6E, 0xE3, 0x62, 0x19D, 0x139, 0x7B, 0x74,
        0x5A, 0x8E, 0x9D, 0x89, 0xAF, 0x9F, 0xD6, 0xEE, 0x1B3, 0x146, 0x8E, 0x109, 0xCE, 0x10E, 0xEB, 0x14A, 0x7E, 0xDD,
        0x99, 0xAB, 0x165, 0x189, 0x1AD, 0x17F, 0x90, 0xA9, 0xD1, 0x80, 0xD8, 0xD0, 0xAE, 0xE5, 0x137, 0xF4, 0x0A, 0x0A,
        0x22, 0x22, 0x2A, 0x2A, 0x0F, 0x0F, 0x1A, 0x1A, 0x10, 0x10, 0x0D, 0x0D, 0x20, 0x20, 0x2B, 0x2B, 0x2B, 0x2B,
        0x23, 0x23, 0x13, 0x13, 0x58, 0x58, 0x0B, 0x0B, 0x12, 0x12, 0x0E, 0x0E, 0x11, 0x11, 0x1E, 0x1E, 0x25, 0x25,
        0x0A, 0x0A, 0x11, 0x11, 0x0B, 0x0B, 0x0C, 0x0C, 0x11, 0x11, 0x2A, 0x2A, 0x1B, 0x1B, 0x0D, 0x0D, 0x20, 0x20,
        0x0D, 0x0D, 0x14, 0x14, 0x0B, 0x0B, 0x0C, 0x0C, 0x0B, 0x0B, 0x11, 0x11, 0x2C, 0x2C, 0x1D, 0x1D, 0x1D, 0x1D,
        0x2C, 0x2C, 0x14, 0x14, 0x32, 0x32, 0x0B, 0x0B, 0x0C, 0x0C, 0x10, 0x10, 0x4D, 0x4D, 0x0E, 0x0E, 0x10, 0x10,
        0x1F, 0x1F, 0x0E, 0x0E, 0x1B, 0x1B, 0x1B, 0x1B, 0x1D, 0x1D, 0x0D, 0x0D, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x10,
        0x1C, 0x1C, 0x0E, 0x0E, 0x1E, 0x1E, 0x1C, 0x1C, 0x0C, 0x0C, 0x1D, 0x1D, 0x1E, 0x1E, 0x0F, 0x0F, 0x1A, 0x1A,
        0x1B, 0x1B, 0x10, 0x10, 0x1F, 0x1F, 0x1E, 0x1E, 0x23, 0x23, 0x0B, 0x0B, 0x0B, 0x0B, 0x0F, 0x0F, 0x10, 0x10,
        0x1D, 0x1D, 0x12, 0x12, 0x0C, 0x0C, 0x0B, 0x0B, 0x0A, 0x0A, 0x0B, 0x0B, 0x0B, 0x0B, 0x0C, 0x0C, 0x0A, 0x0A,
        0x0F, 0x0F, 0x0A, 0x0A, 0x0F, 0x0F, 0x10, 0x10, 0x0D, 0x0D, 0x08, 0x08, 0x15, 0x15
    };
}